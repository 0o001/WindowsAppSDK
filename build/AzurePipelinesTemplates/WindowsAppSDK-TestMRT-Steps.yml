steps:
- task: DownloadPipelineArtifact@2
  displayName: 'Download Foundation x64'
  inputs:
    artifactName: "drop_TransportPackage_BuildMRT_$(buildConfiguration)_$(buildPlatform)"
    targetPath: '$(Build.SourcesDirectory)\BuildOutput'

- script: |
    dir /s $(Build.SourcesDirectory)\BuildOutput
  displayName: 'DIAG: dir testPayloadDir'

# Run the test locally on the Azure VM.
- task: VSTest@2
  displayName: 'test MRT: ManagedTests'
  condition: and(succeeded(), or(eq(variables['buildPlatform'], 'x86'), eq(variables['buildPlatform'], 'x64')))
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: '**\MrtCoreManagedTest.build.appxrecipe'
    searchFolder: '$(Build.SourcesDirectory)\BuildOutput\$(buildConfiguration)\$(buildPlatform)\MrtCoreManagedTest'
    testRunTitle: 'test MRT: ManagedTests - $(buildPlatform)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  displayName: 'test MRT: UnitTests'
  condition: and(succeeded(), or(eq(variables['buildPlatform'], 'x86'), eq(variables['buildPlatform'], 'x64')))
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: '**\MrmUnitTest.dll'
    searchFolder: $(Build.SourcesDirectory)\BuildOutput\$(buildConfiguration)\$(buildPlatform)\MrmUnitTest'
    testRunTitle: 'test MRT: UnitTests - $(buildPlatform)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  displayName: 'test MRT: BaseUnitTests'
  condition: and(succeeded(), or(eq(variables['buildPlatform'], 'x86'), eq(variables['buildPlatform'], 'x64')))
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: '**\MrmBaseUnitTests.dll'
    searchFolder: '$(Build.SourcesDirectory)\BuildOutput\$(buildConfiguration)\$(buildPlatform)\MrmBaseUnitTests'
    testRunTitle: 'test MRT: BaseUnitTests - $(buildPlatform)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  displayName: 'test MRT: UnpackagedTests'
  condition: and(succeeded(), or(eq(variables['buildPlatform'], 'x86'), eq(variables['buildPlatform'], 'x64')))
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: '**\MRTCoreUnpackagedTests.dll'
    searchFolder: '$(Build.SourcesDirectory)\BuildOutput\$(buildConfiguration)\$(buildPlatform)\MrtCoreUnpackagedTests'
    testRunTitle: 'test MRT: UnpackagedTests - $(buildPlatform)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'