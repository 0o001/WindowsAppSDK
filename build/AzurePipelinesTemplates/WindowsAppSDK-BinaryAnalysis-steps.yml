parameters:
  # Caller optionally overrides these.
  - name: outputDirectory
    type: string
    default: $(Build.SourcesDirectory)\BuildOutput
  - name: enablePREFast
    type: boolean
    default: true

steps:
  - task: NodeTool@0
    displayName: 'Use Node >=8.6.0'
    inputs:
      versionSpec: '>=8.6.0'

  # alam start
  - ${{ if eq(parameters.enablePREFast, true) }}:
    - task: SDLNativeRules@3
      displayName: 'Guardian: PreFast@3'
      env:
        SYSTEM_ACCESSTOKEN: $(System.AccessToken)
      continueOnError: true
      inputs:
        publishXML: false
        userProvideBuildInfo: auto
        #rulesetName: Recommended
        #rulesetName: Required
        # Exclude test code ATM to prioritize auto bug filing against product code.
        excludedPaths: |
          s\dev\MRTCore\mrt\Core\UnitTests
          s\dev\MRTCore\mrt\mrm\UnitTests
          s\dev\MRTCore\mrt\Microsoft.Windows.ApplicationModel.Resources\unittests
          s\dev\MRTCore\mrt\Microsoft.Windows.ApplicationModel.Resources\UnpackagedTests
          s\test
          s\installer\test
  # alam end

  - template: v2/Steps/PackageES/Windows.SDL.Binary.Analysis.OS.Undocked.yml@templates_onebranch
    parameters:
      variables:
        ob_outputDirectory: ${{ parameters.outputDirectory }}
        ob_sdl_binskim_scanOutputDirectoryOnly: true
        ob_sdl_binskim_break: false 
      globalsdl:
        binskim:
          enabled: true
          break: true
          # The following serves as an include/exclude example (*untested*).
          # analyzeTargetGlob: '+:file|**\bin\**\*.dll;-:file|**\Microsoft.WindowsAppRuntime.Insights.Resource.dll'
        prefast:
          # alam start
          #${{ if ne(parameters.enablePREFast, true) }}:
          #  enabled: false
          #${{ if eq(parameters.enablePREFast, true) }}:
          #  enabled: true
          # ToDo: set the following to true once pre-existing errors are resolved.
          # break: false
          #rulesetName: Required
          #rulesetName: Recommended
          #excludedPath: 'test;installer\test;dev\MRTCore\mrt\Core\unittests;dev\MRTCore\mrt\mrm\UnitTests'
          enabled: false
        # The following scans we already did during in the SourceAnalysis job, not repeating here.
        # ToDo: Consider disabling Antimalware also, but how?
        #credscan:
        #  enabled: false
        #policheck:
        #  enabled: false
        # alam end
