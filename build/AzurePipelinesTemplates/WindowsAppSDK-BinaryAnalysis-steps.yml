parameters:
  # Caller optionally overrides these.
  - name: outputDirectory
    type: string
    default: $(Build.SourcesDirectory)\BuildOutput
  - name: enablePREFast
    type: boolean
    default: true

steps:
  - task: NodeTool@0
    displayName: 'Use Node >=8.6.0'
    inputs:
      versionSpec: '>=8.6.0'

  # alam start
  - script: |
      dir /s $(Build.SourcesDirectory)

  - task: CopyFiles@2
    displayName: 'Copy binlog files to parent'
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)\BuildOutput'
      Contents: |
        *.binlog
      TargetFolder: '$(Build.SourcesDirectory)'

  - task: SDLNativeRules@3
    displayName: 'Guardian: PreFast@3'
    env:
      SYSTEM_ACCESSTOKEN: $(System.AccessToken)
    continueOnError: true
    inputs:
      publishXML: false
      userProvideBuildInfo: auto
  # alam end

  - template: v2/Steps/PackageES/Windows.SDL.Binary.Analysis.OS.Undocked.yml@templates_onebranch
    parameters:
      variables:
        ob_outputDirectory: ${{ parameters.outputDirectory }}
        ob_sdl_binskim_scanOutputDirectoryOnly: true
        ob_sdl_binskim_break: false 
      globalsdl:
        tsa:
          # alam start
          # enabled: true
          enabled: false
          # alam end
        binskim:
          enabled: true
          break: true
          # The following serves as an include/exclude example (*untested*).
          # analyzeTargetGlob: '+:file|**\bin\**\*.dll;-:file|**\Microsoft.WindowsAppRuntime.Insights.Resource.dll'
        # This SDL template is currently invoking PreFast's SDLNativeRules@2 task, which does not seem to support TSA auto bug
        # filing. Once the template is upgrade to invoke the SDLNativeRules@3 task, TSA auto bug filing is expected to happen.
        prefast:
          ${{ if ne(parameters.enablePREFast, true) }}:
            enabled: false
          ${{ if eq(parameters.enablePREFast, true) }}:
            enabled: true
          # alam start
          # ToDo: set the following to true once pre-existing errors are resolved.
          # break: false        
          break: true
        # The following scans we already did during in the SourceAnalysis job, not repeating here.
        # ToDo: Consider disabling Antimalware also, but how?
        #credscan:
        #  enabled: false
        #policheck:
        #  enabled: false
        # alam end
