
parameters:
- name: "ReleaseSigning"
  type: boolean
  default: False
- name: "IgnoreFailures"
  type: boolean
  default: False
- name: "PublishPackage"
  type: boolean
  default: False
- name: "GenerateSBOM"
  type: boolean
  default: False
- name: "RunSDLBinaryAnalysis"
  displayName: "Run SDL's Binary Analysis (PREFast, BinSkim)"
  type: boolean
  default: False
- name: "enablePREFast"
  type: boolean
  default: true
- name: "enableLicenseInstall"
  type: boolean

steps:
- task: NuGetToolInstaller@1

- task: NuGetAuthenticate@1
  inputs:
    nuGetServiceConnections: 'TelemetryInternal'

- task: 333b11bd-d341-40d9-afcf-b32d5ce6f23b@2
  displayName: 'NuGet restore of packages'
  inputs:
    command: 'custom'
    arguments: 'restore dev\WindowsAppRuntime_Insights\packages.config -ConfigFile dev\WindowsAppRuntime_Insights\nuget.config -PackagesDirectory dev\WindowsAppRuntime_Insights\packages'

- template: WindowsAppSDK-SetupBuildEnvironment-Steps.yml

- task: NuGetAuthenticate@1
  inputs:
    nuGetServiceConnections: 'ProjectReunionInternal'

  # Copy MSIX license installation header into the correct source location.
  # Restore transport package dependencies. This is only enbaled in release-signed builds.
- task: PowerShell@2
  name: ConvertVersionDetailsToPackageConfig
  displayName: "Convert VersionDetails To PackageConfig"
  inputs:
    filePath: '$(REPOROOT)\build\Scripts\ConvertVersionDetailsToPackageConfig.ps1'
    arguments: -versionDetailsPath '$(REPOROOT)\eng\Version.Details.xml' -packageConfigPath '$(REPOROOT)\build\packages.config'

- task: 333b11bd-d341-40d9-afcf-b32d5ce6f23b@2
  displayName: RestoreNuGetPackages
  inputs:
    restoreSolution: build/packages.config
    feedsToUse: config
    nugetConfigPath: build/licensing.nuget.config
    restoreDirectory: packages

- task: CopyFiles@2
  displayName: 'Extract license header to source location'
  inputs:
    SourceFolder: '$(REPOROOT)\build\packages\$(AppLicensingInternalPackageName).$(AppLicensingInternalPackageVersion)\src'
    Contents: |
      *.h
    TargetFolder: '$(REPOROOT)\dev\Licensing'
    flattenFolders: false
    overWrite: true

- task: PowerShell@2
  name: BuildBinaries
  inputs:
    filePath: 'BuildAll.ps1'
    arguments: -Platform "$(buildPlatform)" -Configuration "$(buildConfiguration)" -AzureBuildStep "BuildBinaries"