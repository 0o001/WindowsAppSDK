parameters:
  AssetName: ''
  AssetVersion: ''
  nonShipping: true
steps:
  - task: PowerShell@2
    displayName: Build JsonBody 
    inputs:
      targetType: 'inline'
      script: |
        $jsonBase = @{}

        $locationList = New-Object System.Collections.ArrayList
        $locationList.Add(@{"location"="maestroTestValue";"type"="none"})

        $assetList = New-Object System.Collections.ArrayList
        $assetList.Add(
          @{
            "name"="${{ parameters.AssetName }}";
            "version"="${{ parameters.AssetVersion }}";
            "nonShipping"="${{ parameters.nonShipping }}";
            "locations"=$locationList
          }
        )

        $dependenciesList = New-Object System.Collections.ArrayList
        $dependenciesList.Add(
          @{
            "buildId"=0;
            "isProduct"=$true;
            "timeToInclusionInMinutes"=0;
          }
        )

        $incoherenciesList = New-Object System.Collections.ArrayList
        $incoherenciesList.Add(
          @{
            "name"="maestroTestValue";
            "version"="maestroTestValue";
            "repository"="maestroTestValue";
            "commit"="maestroTestValue";
          }
        )

        $jsonBase = 
          @{
            "commit"="12345";
            "assets"=$assetList;
            "dependencies"=$dependenciesList;
            "azureDevOpsBuildId"=$(Build.BuildId);
            "azureDevOpsBuildDefinitionId"=0;
            "azureDevOpsAccount"="maestroTestValue";
            "azureDevOpsProject"="maestroTestValue";
            "azureDevOpsBuildNumber"="$(Build.BuildNumber)";
            "azureDevOpsRepository"="maestroTestValue";
            "azureDevOpsBranch"="$(Build.SourceBranch)";
            "gitHubRepository"="maestroTestValue";
            "gitHubBranch"="maestroTestValue";
            "released"=$true;
            "stable"=$true
          }

        $jsonBase | ConvertTo-Json -Depth 10 | Out-File '$(Build.SourcesDirectory)\build\maestro\maestro-build.json'
        $body = Get-Content -Raw -Path '$(Build.SourcesDirectory)\build\maestro\maestro-build.json'
        Write-host "Writing Json body"
        Write-host $body

  - task: powershell@2
    displayName: 'Post Channel Test'
    inputs:
      targetType: filePath
      filePath: build\maestro\SubmitBuildToMaestro.ps1
      arguments: -Uri '$(MaestroUri)' -Token '$(MaestroToken)' -JsonPath '$(Build.SourcesDirectory)\build\maestro\maestro-build.json'