parameters:
  AssetName: ''
  AssetVersion: ''
  IsGitHubRepo: true
steps:
  - task: PowerShell@2
    displayName: Check prerequisites
    inputs:
      targetType: 'inline'
      script: |
        Write-Host "Pipeline Variable 'MaestroToken' and 'MaestroUri' must have a value"
        Write-Host "##vso[task.complete result=Failed;]DONE"
    condition: or(eq(variables['MaestroUri'], ''), eq(variables['MaestroToken'], ''))

  - task: powershell@2
    displayName: 'Get Default channel'
    inputs:
      targetType: filePath
      filePath: eng\common\MaestroPostRequest.ps1
      arguments: >
      -url '$(MaestroUri)' -Token '$(MaestroToken)' -api '/api/default-channels'
      -queryParameters '&repository=$(Build.Repository.Uri)&branch=$(Build.SourceBranch)'
      -jsonBodyPath ''

  # - task: PowerShell@2
  #   displayName: Build JsonBody 
  #   inputs:
  #     targetType: 'inline'
  #     script: |
  #       . .\eng\common\MaestroHelpers.ps1
        
  #       $jsonBase = @{}

  #       $assetList = New-Object System.Collections.ArrayList
  #       $assetList.Add(
  #         @{
  #           "name"="${{ parameters.AssetName }}";
  #           "version"="${{ parameters.AssetVersion }}";
  #           "nonShipping"=$false;
  #           "locations"=$null
  #         }
  #       )

  #       # These fields below are unused but can be enabled in the future
  #       # $locationList = New-Object System.Collections.ArrayList
  #       # $locationList.Add(@{"location"="maestroTestValue";"type"="none"})

  #       # $dependenciesList = New-Object System.Collections.ArrayList
  #       # $dependenciesList.Add(
  #       #   @{
  #       #     "buildId"=0;
  #       #     "isProduct"=$true;
  #       #     "timeToInclusionInMinutes"=0;
  #       #   }
  #       # )

  #       # $incoherenciesList = New-Object System.Collections.ArrayList
  #       # $incoherenciesList.Add(
  #       #   @{
  #       #     "name"="maestroTestValue";
  #       #     "version"="maestroTestValue";
  #       #     "repository"="maestroTestValue";
  #       #     "commit"="maestroTestValue";
  #       #   }
  #       # )

  #       Write-Host "collectionuri: $(System.CollectionUri)"
  #       $devOpsAccount = ExtractOrgFromAzureDevOpsCollectionUri '$(System.CollectionUri)'
  #       Write-Host "reposiitory: $(Build.Repository.Uri)"
  #       Write-Host "account: " $devOpsAccount
        
  #       $gitHubRepo = ""
  #       $azureDevOpsRepo = ""
  #       if ('${{ parameters.IsGitHubRepo }}' -eq 'true')
  #       {
  #         $gitHubRepo = "$(Build.Repository.Uri)"
  #         $azureDevOpsRepo = "$(Build.Repository.Uri)"
  #       }
  #       if ('${{ parameters.IsGitHubRepo }}' -ne 'true')
  #       {
  #         $azureDevOpsRepo = "$(Build.Repository.Uri)"
  #       }

  #       $jsonBase = 
  #         @{
  #           "commit"="$(Build.SourceVersion)";
  #           "assets"=$assetList;
  #           "dependencies"=$null;
  #           "azureDevOpsBuildId"=$(Build.BuildId);
  #           "azureDevOpsBuildDefinitionId"=$(System.DefinitionId);
  #           "azureDevOpsAccount"=$devOpsAccount;
  #           "azureDevOpsProject"="$(System.TeamProject)";
  #           "azureDevOpsBuildNumber"="$(Build.BuildNumber)";
  #           "azureDevOpsRepository"=$azureDevOpsRepo;
  #           "azureDevOpsBranch"="$(Build.SourceBranch)";
  #           "gitHubRepository"=$gitHubRepo;
  #           "gitHubBranch"="$(Build.SourceBranch)";
  #           "released"=$true;
  #           "stable"=$true
  #           "incoherencies"=$null;
  #         }

  #       $jsonBase | ConvertTo-Json -Depth 10 | Out-File '$(Build.SourcesDirectory)\eng\common\maestro-build.json'
  #       $body = Get-Content -Raw -Path '$(Build.SourcesDirectory)\eng\common\maestro-build.json'
  #       Write-host "Writing Json body"
  #       Write-host $body

  # - task: powershell@2
  #   displayName: 'Post Channel Test'
  #   inputs:
  #     targetType: filePath
  #     filePath: eng\common\MaestroPostRequest.ps1
  #     arguments: -url '$(MaestroUri)' -Token '$(MaestroToken)' -api '/api/builds' -queryParameters '' -jsonBodyPath '$(Build.SourcesDirectory)\eng\common\maestro-build.json'